name: plugins.castopod.org deployment
on:
  push:

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [24]
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4

      - name: ✅ Validate composer.json and composer.lock
        run: composer validate --strict

      - name: 🗂️ Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: 📥 Install php dependencies
        run: composer install --prefer-dist --no-progress

      - name: ✨ PHP Quality check
        run: |
          composer validate --strict --ansi
          composer run-script style
          composer run-script phpstan
          composer run-script rector
          composer run-script pest:type-coverage

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: ⚙️ Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: 📥 Install js dependencies
        run: pnpm install

      - name: ✨ JS Quality check
        run: |
          pnpm run lint

      - name: 📦 Bundle app
        run: |
          chmod +x ./scripts/bundle.sh
          ./scripts/bundle.sh
          echo "${{secrets.ENV_FILE }}" | base64 --decode > ./dist/.env
          echo "${{secrets.CUSTOM_HEAD_SCRIPTS}}" | base64 --decode > ./dist/custom-head-scripts.html
          echo "${{secrets.OFFICIAL_REPOSITORIES}}" | base64 --decode > ./dist/official-repositories.txt
          chmod -R 550 dist/
          chmod -R 770 dist/public/static/
          chmod -R 770 dist/writable/

      - name: 📤 Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          include-hidden-files: true

  deploy:
    runs-on: ubuntu-latest
    needs: quality
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: 📥 Download bundle artifact
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: 🚀 Deploy Build
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzrog --delete --chown=${{ secrets.DEPLOY_USER }}:${{ secrets.WEBSERVER_USER }}
          path: dist/
          remote_path: ${{ secrets.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
